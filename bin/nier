#!/usr/bin/perl

use strict;
use warnings;
use Getopt::Std;
use Nier;

my %opts = parse_cmdline_parameters();
my $input_file = $ARGV[0];
my $create_intermediary_files = exists $opts{i};
my $verbose = exists $opts{v};

my $license_result = Nier::process_file($input_file, $create_intermediary_files, $verbose);
my @result_array = split('\;', $license_result);
if (scalar(@result_array) == 7) {
	print "inputfile: $input_file\n";
	print "licenses: $result_array[0]\n";
	print "number of licenses matched: $result_array[1]\n";
	print "number of sentences matched: $result_array[2]\n";
	print "number of sentences ignored: $result_array[3]\n";
	print "number of sentences not matched: $result_array[4]\n";
	print "number of sentences unknown: $result_array[5]\n";
	print "senttok: $result_array[6]\n";
	print "songzhentian\n";
} else {
	print "$input_file;$license_result\n";
}

exit 0;

sub parse_cmdline_parameters {
    my %opts = ();
    if (!getopts('iv', \%opts) || scalar(@ARGV) == 0) {
        print STDERR "Nier v${Nier::VERSION}

Usage: nier [options] <filename>

Options:
  -i create intermediary files
  -v verbose\n";

        exit 1;
    }
    return %opts;
}

__END__
